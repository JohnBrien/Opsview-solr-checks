#!/usr/bin/perl
use warnings;
use strict;
use LWP::UserAgent;
use XML::XPath;

#
# Check Solr query handler response times using the Admin stats page
# e.g. check_solr_avg_response_time http://localhost:8983/solr/admin/stats.jsp standard
#
# (c) 2011 Robin Bramley, Ixxus Ltd.
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#

# Nagios return values
# OK = 0
# WARNING = 1
# CRITICAL = 2
# UNKNOWN = 3

my $retStr = "Unknown - plugin error";
my $perfData = "";
my @alertStrs = ("OK", "WARNING", "CRITICAL", "UNKNOWN");
my $exitCode = 3;
my $numArgs = $#ARGV + 1;

# check arguments
if ( $numArgs != 2 && $numArgs != 4 ) {
  print "Usage: check_solr_avg_response_time url handler [username password]\n";
  exit $exitCode;
}

my $ua = LWP::UserAgent->new;
my $req = HTTP::Request->new( GET => $ARGV[0] );

# perform basic auth if necessary
if ( $numArgs == 4 ) {
  $req->authorization_basic( $ARGV[2], $ARGV[3] );
}

# make request to Solr
my $res = $ua->request($req);

# if we have a HTTP 200 OK response
if ( $res->is_success ) {
  # get content as XML
  my $xp = XML::XPath->new( xml => $res->content );

  my $core = $xp->getNodeText('/solr/core')->string_value();
  my $schema = $xp->getNodeText('/solr/schema')->string_value();
  
  $retStr = "Solr Core: $core - schema: $schema";
  
  my $handlerName = $ARGV[1];
  
  # loop through the QUERYHANDLER entries
  if ( $xp->exists("/solr/solr-info/QUERYHANDLER/entry[normalize-space(name)='$handlerName']") ) {
	my $avgResponseTime = $xp->getNodeText("/solr/solr-info/QUERYHANDLER/entry[normalize-space(name)='$handlerName']/stats/stat[\@name='avgTimePerRequest']")->string_value();;
	my $requests = $xp->getNodeText("/solr/solr-info/QUERYHANDLER/entry[normalize-space(name)='$handlerName']/stats/stat[\@name='requests']")->string_value();;
	my $qps = $xp->getNodeText("/solr/solr-info/QUERYHANDLER/entry[normalize-space(name)='$handlerName']/stats/stat[\@name='avgRequestsPerSecond']")->string_value();;
	
	# Clean up the strings
    $requests =~ s/^\s+|\s+$//g;
    if ($requests == 0) {      
      $retStr = $retStr . " - Query handler ${handlerName} has had no requests.";
      $exitCode = 3;
    } else {
      $avgResponseTime =~ s/^\s+|\s+$//g;
      $qps =~ s/^\s+|\s+$//g;
      
      # TODO: warning & critical thresholds
      $exitCode = 0;
      
      # append to performance data
	  $perfData = $perfData . "'${handlerName} avgResponseTime'=${avgResponseTime}ms;;;; '${handlerName} requests'=${requests}c;;;; '${handlerName} qps'=${qps};;;; ";
    }
  }
  else {
    # exit code stays as UNKNOWN
    $retStr = $retStr . " - Query handler ${handlerName} not found!"
  }
}
else {
  $retStr = $res->status_line;
  $exitCode = 1;
}

print $alertStrs[$exitCode] . " - $retStr | $perfData\n";
exit $exitCode;
