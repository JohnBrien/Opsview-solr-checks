#!/usr/bin/perl
use warnings;
use strict;
use LWP::UserAgent;
use XML::XPath;

#
# Check Solr cache hit ratios using the Admin stats page
# e.g. check_solr_cache_hit_ratio http://localhost:8983/solr/admin/stats.jsp
#
# (c) 2011 Robin Bramley, Ixxus Ltd.
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#

# Nagios return values
# OK = 0
# WARNING = 1
# CRITICAL = 2
# UNKNOWN = 3

my $retStr = "Unknown - plugin error";
my $perfData = "";
my @alertStrs = ("OK", "WARNING", "CRITICAL", "UNKNOWN");
my $exitCode = 3;
my $numArgs = $#ARGV + 1;

# check arguments
if ( $numArgs != 1 && $numArgs != 3 ) {
  print "Usage: check_solr_cache_hit_ratio url [username password]\n";
  exit $exitCode;
}

my $ua = LWP::UserAgent->new;
my $req = HTTP::Request->new( GET => $ARGV[0] );

# perform basic auth if necessary
if ( $numArgs == 3 ) {
  $req->authorization_basic( $ARGV[1], $ARGV[2] );
}

# make request to Solr
my $res = $ua->request($req);

# if we have a HTTP 200 OK response
if ( $res->is_success ) {
  # get content as XML
  my $xp = XML::XPath->new( xml => $res->content );

  my $core = $xp->getNodeText('/solr/core')->string_value();
  my $schema = $xp->getNodeText('/solr/schema')->string_value();
  
  $retStr = "Solr Core: $core - schema: $schema";
  
  my $n = 1;
  # loop through the CACHE entries
  while ( $xp->exists("/solr/solr-info/CACHE/entry[$n]") ) {
	my $name = $xp->getNodeText("/solr/solr-info/CACHE/entry[$n]/name")->string_value();

	# Don't bother if it doesn't have a hit ratio (e.g. fieldCache which is managed by Lucene)
	if ( $xp->exists("/solr/solr-info/CACHE/entry[$n]/stats/stat[\@name='hitratio']") ) {
      my $hitratio = $xp->getNodeText("/solr/solr-info/CACHE/entry[$n]/stats/stat[\@name='hitratio']")->string_value();
      
      # Clean up the strings
      $name =~ s/^\s+|\s+$//g;
      $hitratio =~ s/^\s+|\s+$//g;

      # append to performance data
      $perfData = $perfData . "'$name hit ratio'=$hitratio\%;;;; ";
    }
    
    $n++;
  }

  $exitCode = 0;
}
else {
  $retStr = $res->status_line;
  $exitCode = 1;
}

print $alertStrs[$exitCode] . " - $retStr | $perfData\n";
exit $exitCode;
